<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="generation">

	<!-- 방생성 -->
    <insert id="insertStep1" parameterType="com.javaex.vo.ChallengeVo" useGeneratedKeys="true" keyProperty="roomNum">
    	<![CDATA[
    		INSERT INTO `roomInfo` (roomTypeNum, roomMaker, roomStatusNum)
        	VALUES (#{roomTypeNum}, #{userNum}, 1)
    	]]>
    </insert>
    
    <!-- 카테고리 등록 -->
    <update id="updateStep2" parameterType="com.javaex.vo.ChallengeVo">
    	<![CDATA[
    		UPDATE roomInfo
			SET categoryNum = #{categoryNum},
			    roomKeyword = #{roomKeyword}
			WHERE roomNum = #{roomNum}
			AND roomMaker = #{userNum}
    	]]>
    </update>
    
    <!-- 이미지, 타이틀, 설명 등록 -->
    <update id="updateStep3" parameterType="com.javaex.vo.ChallengeVo">
    	<![CDATA[
    		UPDATE roomInfo
			SET roomTitle = #{roomTitle},
			    roomDescription = #{roomInfo},
			    roomThumbNail = #{roomThumbNail}
			WHERE roomNum = #{roomNum}
			AND roomMaker = #{userNum}
    	]]>
    </update>
    
    <!-- 방타입넘버 가져오기 -->
    <select id="getRoomType" parameterType="int" resultType="int">
    	<![CDATA[ 
    		SELECT roomTypeNum AS roomTypeNum
    		FROM roomInfo
    		WHERE roomNum = #{roomNum}
    	]]>
    </select>
    
    <!-- 보유포인트 가져오기 -->
    <select id="getUserPoint" parameterType="int" resultType="int">
    	<![CDATA[ 
    		SELECT COALESCE(SUM(CASE WHEN historyInfo = '+' THEN historyPoint ELSE 0 END) - 
                 SUM(CASE WHEN historyInfo = '-' THEN historyPoint ELSE 0 END), 0) as userPoints
		    FROM pointHistory
		    WHERE userNum = #{userNum}
    	]]>
    </select>
    
    <!-- 성실도 가져오기 -->
    <select id="getUserScore" parameterType="int" resultType="double">
    	<![CDATA[ 
    		SELECT 
	            t2.achievement_rate as count
	        FROM (
	            -- <<챌린지 상태별 카운트>>
	            SELECT 
	                SUM(CASE WHEN rs.roomStatusName = '시작' THEN 1 ELSE 0 END) as ongoing_challenges,
	                SUM(CASE WHEN rs.roomStatusName IN ('모집 전', '모집 중') THEN 1 ELSE 0 END) as upcoming_challenges,
	                SUM(CASE WHEN rs.roomStatusName = '종료' THEN 1 ELSE 0 END) as completed_challenges
	            FROM roomInfo ri
	            JOIN roomStatus rs ON ri.roomStatusNum = rs.roomStatusNum
	            JOIN enteredUser eu ON ri.roomNum = eu.roomNum
	            WHERE eu.userNum = #{userNum}
	            AND eu.enteredUserStatusNum = 1
	        ) t1,
	        (
	            -- <<종합 달성률 계산>>
	            SELECT 
	                ROUND(
	                    (COUNT(CASE WHEN e.evalType = '승인완료' THEN 1 END) * 100.0) / 
	                    NULLIF(COUNT(*), 0), 
	                    2
	                ) as achievement_rate
	            FROM challenges c
	            JOIN roomDay rd ON c.roomDayNum = rd.roomDayNum
	            JOIN roomInfo ri ON rd.roomNum = ri.roomNum
	            JOIN enteredUser eu ON ri.roomNum = eu.roomNum
	            LEFT JOIN evaluation e ON c.missionNum = e.missionNum 
	                                AND e.submitUser = eu.userNum
	            WHERE eu.userNum = #{userNum}
	            AND eu.enteredUserStatusNum = 1
	        ) t2
    	]]>
    </select>
    
     <!-- 방 상세설정 업데이트 -->
    <update id="updateStep4" parameterType="com.javaex.vo.ChallengeVo">
    	<![CDATA[
    		UPDATE roomInfo
			SET roomMaxNum = #{roomMaxNum},
			    roomMinNum = #{roomMinNum},
			    roomEnterPoint = #{roomPoint},
			    roomEnterRate = #{roomRate},
			    regionNum = #{regionNum}
			WHERE roomNum = #{roomNum}
			AND roomMaker = #{userNum}
    	]]>
    </update>
    
     <!-- 방 시작날짜+기간 업데이트 -->
    <update id="updateStep5" parameterType="com.javaex.vo.ChallengeVo">
    	<![CDATA[
    		UPDATE roomInfo
			SET roomStartDate = #{roomStartDate},
			    periodNum = #{periodType}
			WHERE roomNum = #{roomNum}
			AND roomMaker = #{userNum}
    	]]>
    </update>
    
    <!-- 방 평가방법 업데이트 -->
    <update id="updateEvaluationType" parameterType="com.javaex.vo.ChallengeVo">
    	<![CDATA[
    		UPDATE roomInfo
			SET evaluationType = #{evaluationType}
			WHERE roomNum = #{roomNum}
			AND roomMaker = #{userNum}
    	]]>
    </update>
    
    <!-- 방넘버 요일정보 인서트하기 -->
    <insert id="insertRoomDay" parameterType="com.javaex.vo.ChallengeVo" useGeneratedKeys="true" keyProperty="roomNum">
    	<![CDATA[
    		INSERT INTO `roomDay` (dateNum, roomNum)
        	VALUES (#{roomDayNum}, #{roomNum})
    	]]>
    </insert>
    
    <!-- 미션유의사항 업데이트 -->
    <update id="updateInstruction">
    	<![CDATA[
    		UPDATE roomInfo
			SET missionInstruction = #{missionInstruction}
			WHERE roomNum = #{roomNum}
    	]]>
    </update>
    
    <!-- 방 번호로 roomDayNum 리스트 가져오기 -->
    <select id="getRoomDayNum" parameterType="int" resultType="com.javaex.vo.ChallengeVo">
    	<![CDATA[
        	SELECT roomDayNum
        	FROM roomDay
        	WHERE roomNum = #{roomNum}
        ]]>
    </select>

    <!-- 미션 등록 -->
    <insert id="insertMission" parameterType="com.javaex.vo.ChallengeVo" useGeneratedKeys="true" keyProperty="missionNum">
    	<![CDATA[
        	INSERT INTO challenges (missionTypeNum, roomDayNum, missionName, missionMethod, missionGoal, missionAI)
        	VALUES (#{missionTypeNum}, #{roomDayNum}, #{missionName}, #{missionMethod}, #{missionGoal}, #{missionAI})
        ]]>
    </insert>

    <!-- 미션별 이미지 등록 -->
    <insert id="missionImageInsert" parameterType="com.javaex.vo.ChallengeVo">
    	<![CDATA[
	        INSERT INTO missionImg (missionNum, missionImgName)
    	    VALUES (#{missionNum}, #{missionImgName})
    	]]>
    </insert>
    
    <!-- 방 참가 -->
    <insert id="joinRoom" parameterType="com.javaex.vo.ChallengeVo" useGeneratedKeys="true" keyProperty="roomNum">
    	<![CDATA[
        	INSERT INTO enteredUser (roomNum, userNum, enteredUserStatusNum, enteredUserAuth)
        	VALUES (#{roomNum}, #{userNum}, 1, 1);
        ]]>
    </insert>
    
    <!-- 방 입장포인트 가져오기 	-->
    <select id="getRoomPoint" parameterType="com.javaex.vo.ChallengeVo" resultType="com.javaex.vo.ChallengeVo">
    	<![CDATA[ 
    		SELECT roomEnterPoint AS roomPoint
    		FROM roomInfo
    		WHERE roomNum = #{roomNum}
    	]]>
    </select>
    
    <!-- 포인트 히스토리 삽입 -->
    <insert id="minusPoint" parameterType="map">
    	<![CDATA[
        	INSERT INTO pointHistory (userNum, historyPoint, pointPurposeNum, historyInfo, historyDate)
        	VALUES (#{userNum}, #{roomPoint}, 6, "-", NOW());
        ]]>
    </insert>
    
    
</mapper>
